set(CPACK_PACKAGE_NAME ${PROJECT_NAME} CACHE STRING "Clio")
# set(CPACK_CMAKE_GENERATOR Ninja) # Don't necessarily want Ninja but this prevents CPack always building the "preinstall" target when we've already built everything.
# set(CPACK_DEBIAN_PACKAGE_EPOCH 1) # Gets appended to pkg e.g. clio_0.1:1
set(CPACK_DEBIAN_PACKAGE_SUGGESTS postgresql) # TODO: how to define cass dep?
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Clio XRPL Full History Server"
    CACHE STRING ""
)
set(CPACK_DEBIAN_PACKAGE_DEBUG 1)
set(CPACK_VERBATIM_VARIABLES YES)

set(CPACK_PACKAGE_INSTALL_DIRECTORY ${CPACK_PACKAGE_NAME})
set(CPACK_OUTPUT_FILE_PREFIX "${CMAKE_BINARY_DIR}/Packages")

set(CPACK_PACKAGING_INSTALL_PREFIX "/opt/${PROJECT_NAME}")#/${CMAKE_PROJECT_VERSION}")

set(CPACK_PACKAGE_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})
set(CPACK_PACKAGE_VERSION_MINOR ${PROJECT_VERSION_MINOR})
set(CPACK_PACKAGE_VERSION_PATCH ${PROJECT_VERSION_PATCH})

# set(CPACK_PACKAGE_CONTACT "YOUR@E-MAIL.net")
set(CPACK_DEBIAN_PACKAGE_MAINTAINER "support@ripple.com")
set(CPACK_DEBIAN_PACKAGE_HOMEPAGE "")
set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/LICENSE.md")
set(CPACK_RESOURCE_FILE_README "${CMAKE_SOURCE_DIR}/README.md")
set(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA "${CMAKE_BINARY_DIR}/debian/postinst")

configure_file("${CMAKE_SOURCE_DIR}/CMake/packaging/debian/postinst.in" "${CMAKE_BINARY_DIR}/debian/postinst")

set(CPACK_DEBIAN_FILE_NAME DEB-DEFAULT)
set(CPACK_COMPONENTS_GROUPING ALL_COMPONENTS_IN_ONE)#ONE_PER_GROUP)
set(CPACK_DEB_COMPONENT_INSTALL YES)

include(CPack)
